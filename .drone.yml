kind: pipeline
type: docker
name: main

workspace:
  path: /app

environment:
  JWT_ALGORITHM: "HS256"
  JWT_EXPIRE_TIME: 120

  POSTGRES_HOST: "db"
  POSTGRES_USERNAME: postgres
  POSTGRES_PASSWORD: postgres
  POSTGRES_PORT: 5432
  POSTGRES_DB: test

  REDIS_HOST: "cache"
  REDIS_PORT: 6379
  REDIS_EXPOSE: 6379
  REDIS_USERNAME: default
  REDIS_PASSWORD: redis_username
  REDIS_BACKEND_DB: 0

steps:
  - name: waiton cache
    image: akhenakh/drone-waiton:1.0
    settings:
      globaltimeout: 30s
      urls:
      - tcp://cache:6379

  - name: waiton db
    image: akhenakh/drone-waiton:1.0
    settings:
      globaltimeout: 60s
      urls:
      - tcp://db:5432


  - name: application testing
    image: python:3.9-slim
    environment:
      PYTHONDONTWRITEBYTECODE: 1
      PYTHONUNBUFFERED: 1
      ENVIRONMENT: TEST
      JWT_SECRET_KEY:
        from_secret: JWT_SECRET_KEY
    commands:
      - pip install --upgrade pip poetry cookiecutter
      - chmod +x test.sh
      - bash test.sh


  - name: telegram bot notification
    image: appleboy/drone-telegram
    when:
      status:
        - failure
        - success
    settings:
      token:
        from_secret: Telegram_gggoingdown_bot_token
      to:
        from_secret: Telegram_chat_id
      message: >
        {{#success build.status}}
          Repository: {{repo.name}}
          Test succeeded. Good job.
        {{else}}
          Repository: {{repo.name}}
          Test failed. Fix me please.
        {{/success}}

services:
- name: cache
  image: redis:6.2
  detach: true
  commands:
    - redis-server --requirepass redis_username

- name: db
  image: postgres:13
  environment:
    POSTGRES_USER: postgres
    POSTGRES_PASSWORD: postgres
    POSTGRES_DB: test


trigger:
  branch:
    - master
    - test/*
    - feature/*
